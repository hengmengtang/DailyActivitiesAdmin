'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class DailyActivityDBEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=DailyActivityDBEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property Activities() As DbSet(Of Activity)
    Public Overridable Property ActivityDetails() As DbSet(Of ActivityDetail)
    Public Overridable Property ExchangeRates() As DbSet(Of ExchangeRate)
    Public Overridable Property UserAccounts() As DbSet(Of UserAccount)

    Public Overridable Function ActivityToday(username As String) As ObjectResult(Of ActivityToday_Result)
        Dim usernameParameter As ObjectParameter = If(username IsNot Nothing, New ObjectParameter("username", username), New ObjectParameter("username", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of ActivityToday_Result)("ActivityToday", usernameParameter)
    End Function

    Public Overridable Function Create_DailyActivity(user_name As String, activity_name As String, data As Nullable(Of Date), start_time As Nullable(Of System.TimeSpan), end_time As Nullable(Of System.TimeSpan), location As String, excute_status As Nullable(Of Boolean), currency As String, cost As Nullable(Of Decimal), description As String) As Integer
        Dim user_nameParameter As ObjectParameter = If(user_name IsNot Nothing, New ObjectParameter("user_name", user_name), New ObjectParameter("user_name", GetType(String)))

        Dim activity_nameParameter As ObjectParameter = If(activity_name IsNot Nothing, New ObjectParameter("activity_name", activity_name), New ObjectParameter("activity_name", GetType(String)))

        Dim dataParameter As ObjectParameter = If(data.HasValue, New ObjectParameter("data", data), New ObjectParameter("data", GetType(Date)))

        Dim start_timeParameter As ObjectParameter = If(start_time.HasValue, New ObjectParameter("start_time", start_time), New ObjectParameter("start_time", GetType(System.TimeSpan)))

        Dim end_timeParameter As ObjectParameter = If(end_time.HasValue, New ObjectParameter("end_time", end_time), New ObjectParameter("end_time", GetType(System.TimeSpan)))

        Dim locationParameter As ObjectParameter = If(location IsNot Nothing, New ObjectParameter("location", location), New ObjectParameter("location", GetType(String)))

        Dim excute_statusParameter As ObjectParameter = If(excute_status.HasValue, New ObjectParameter("excute_status", excute_status), New ObjectParameter("excute_status", GetType(Boolean)))

        Dim currencyParameter As ObjectParameter = If(currency IsNot Nothing, New ObjectParameter("currency", currency), New ObjectParameter("currency", GetType(String)))

        Dim costParameter As ObjectParameter = If(cost.HasValue, New ObjectParameter("cost", cost), New ObjectParameter("cost", GetType(Decimal)))

        Dim descriptionParameter As ObjectParameter = If(description IsNot Nothing, New ObjectParameter("description", description), New ObjectParameter("description", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("Create_DailyActivity", user_nameParameter, activity_nameParameter, dataParameter, start_timeParameter, end_timeParameter, locationParameter, excute_statusParameter, currencyParameter, costParameter, descriptionParameter)
    End Function

    Public Overridable Function GetDailyActivityFromDateToDate(username As String, start_date As Nullable(Of Date), end_date As Nullable(Of Date)) As ObjectResult(Of GetDailyActivityFromDateToDate_Result)
        Dim usernameParameter As ObjectParameter = If(username IsNot Nothing, New ObjectParameter("username", username), New ObjectParameter("username", GetType(String)))

        Dim start_dateParameter As ObjectParameter = If(start_date.HasValue, New ObjectParameter("start_date", start_date), New ObjectParameter("start_date", GetType(Date)))

        Dim end_dateParameter As ObjectParameter = If(end_date.HasValue, New ObjectParameter("end_date", end_date), New ObjectParameter("end_date", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GetDailyActivityFromDateToDate_Result)("GetDailyActivityFromDateToDate", usernameParameter, start_dateParameter, end_dateParameter)
    End Function

End Class
